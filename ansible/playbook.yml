---
# Ansible playbook for automating VM setup
- name: Setup and secure Ubuntu VM
  hosts: all
  become: true
  vars:
    vm_user: sysadmin
    ssh_port: 2222
    vm_hostname: "{{ inventory_hostname_short }}"
    install_docker: true
    install_monitoring: true
    enable_auto_updates: true
    docker_user: "{{ vm_user }}"
    docker_group: docker
    create_trigger_dir: true
    
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ vm_hostname }}"
      when: vm_hostname is defined
      
    - name: Ensure hostname is in /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1 {{ vm_hostname }}"
        state: present
      when: vm_hostname is defined
    
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/scripts
        - /opt/scripts/config
        - /opt/scripts/utils
        - /var/log/post-provision

    - name: Copy VM setup scripts
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0755'
      loop:
        - { src: '../post-provision.sh', dest: '/opt/scripts/post-provision.sh' }
        - { src: '../post-provision.service', dest: '/etc/systemd/system/post-provision.service' }
        - { src: '../scripts/load-env.sh', dest: '/opt/scripts/utils/load-env.sh' }

    - name: Copy SSH public key
      copy:
        src: "~/.ssh/id_rsa.pub"
        dest: "/opt/scripts/config/authorized_keys"
        mode: '0644'
      ignore_errors: true

    - name: Configure VM settings
      copy:
        dest: "/opt/scripts/config/settings.env"
        content: |
          # VM Post-Provisioning Settings
          NEW_USER="{{ vm_user }}"
          SSH_PORT={{ ssh_port }}
          VM_HOSTNAME="{{ vm_hostname }}"
          INSTALL_DOCKER={{ install_docker | lower }}
          INSTALL_MONITORING={{ install_monitoring | lower }}
          ENABLE_AUTO_UPDATES={{ enable_auto_updates | lower }}
          DOCKER_USER="{{ docker_user }}"
          DOCKER_GROUP="{{ docker_group }}"
        mode: '0644'

    - name: Enable service
      systemd:
        name: post-provision
        enabled: yes
        daemon_reload: yes

    - name: Create the trigger directory
      file:
        path: /etc/provisioning-pending
        state: directory
        mode: '0755'
      when: create_trigger_dir | bool

    - name: Wait for provisioning to complete
      wait_for:
        path: /opt/scripts/provision-summary/system-info.txt
        timeout: 600
      register: provision_result
      when: create_trigger_dir | bool
      ignore_errors: true

    - name: Show provisioning result
      debug:
        msg: "Provisioning completed successfully"
      when: provision_result is success

    - name: Show provisioning failure
      debug:
        msg: "Provisioning timed out or failed, check the logs"
      when: provision_result is failed 